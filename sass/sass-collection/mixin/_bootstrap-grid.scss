@import "compass/css3";

// Grid system

//== Media queries breakpoints
//
//## Define the breakpoints at which your layout will change, adapting to different screen sizes.

// Extra small screen / phone
//** Deprecated `$screen-xs` as of v3.0.1
$screen-xs:                  480px !default;
//** Deprecated `$screen-xs-min` as of v3.2.0
$screen-xs-min:              $screen-xs !default;
//** Deprecated `$screen-phone` as of v3.0.1
$screen-phone:               $screen-xs-min !default;

// Small screen / tablet
//** Deprecated `$screen-sm` as of v3.0.1
$screen-sm:                  768px !default;
$screen-sm-min:              $screen-sm !default;
//** Deprecated `$screen-tablet` as of v3.0.1
$screen-tablet:              $screen-sm-min !default;

// Medium screen / desktop
//** Deprecated `$screen-md` as of v3.0.1
$screen-md:                  992px !default;
$screen-md-min:              $screen-md !default;
//** Deprecated `$screen-desktop` as of v3.0.1
$screen-desktop:             $screen-md-min !default;

// Large screen / wide desktop
//** Deprecated `$screen-lg` as of v3.0.1
$screen-lg:                  1200px !default;
$screen-lg-min:              $screen-lg !default;
//** Deprecated `$screen-lg-desktop` as of v3.0.1
$screen-lg-desktop:          $screen-lg-min !default;

// So media queries don't overlap when required, provide a maximum
$screen-xs-max:              ($screen-sm-min - 1) !default;
$screen-sm-max:              ($screen-md-min - 1) !default;
$screen-md-max:              ($screen-lg-min - 1) !default;


//== Grid system
//
//## Define your custom responsive grid.

//** Number of columns in the grid.
$grid-columns:              12 !default;
//** Padding between columns. Gets divided in half for the left and right.
$grid-gutter-width:         30px !default;
// Navbar collapse
//** Point at which the navbar becomes uncollapsed.
$grid-float-breakpoint:     $screen-sm-min !default;
//** Point at which the navbar begins collapsing.
$grid-float-breakpoint-max: ($grid-float-breakpoint - 1) !default;


//== Container sizes
//
//## Define the maximum width of `.container` for different screen sizes.

// Small screen / tablet
$container-tablet:             (720px + $grid-gutter-width) !default;
//** For `$screen-sm-min` and up.
$container-sm:                 $container-tablet !default;

// Medium screen / desktop
$container-desktop:            (940px + $grid-gutter-width) !default;
//** For `$screen-md-min` and up.
$container-md:                 $container-desktop !default;

// Large screen / wide desktop
$container-large-desktop:      (1140px + $grid-gutter-width) !default;
//** For `$screen-lg-min` and up.
$container-lg:                 $container-large-desktop !default;

@mixin clearfix() {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}



// Centered container element
@mixin container-fixed($gutter: $grid-gutter-width) {
  margin-right: auto;
  margin-left: auto;
  padding-left:  floor(($gutter / 2));
  padding-right: ceil(($gutter / 2));
  @include clearfix;
}

// Creates a wrapper for a series of columns
@mixin make-row($gutter: $grid-gutter-width) {
  margin-left:  ceil(($gutter / -2));
  margin-right: floor(($gutter / -2));
  @include clearfix;
}

@mixin gutter($gutter: $grid-gutter-width){
   position: relative;
  min-height: 1px;
  padding-left:  ($gutter / 2);
  padding-right: ($gutter / 2);
  @include box-sizing(border-box);
}

// Generate the extra small columns
@mixin make-xs-column($columns, $gutter: $grid-gutter-width) {
  float: left;
  width: percentage(($columns / $grid-columns));
  
}
@mixin make-xs-column-offset($columns) {
  margin-left: percentage(($columns / $grid-columns));
}
@mixin make-xs-column-push($columns) {
  left: percentage(($columns / $grid-columns));
}
@mixin make-xs-column-pull($columns) {
  right: percentage(($columns / $grid-columns));
}

// Generate the small columns
@mixin make-sm-column($columns) {
  

  @media (min-width: $screen-sm-min) {
    float: left;
    width: percentage(($columns / $grid-columns));
  }
}
@mixin make-sm-column-offset($columns) {
  @media (min-width: $screen-sm-min) {
    margin-left: percentage(($columns / $grid-columns));
  }
}
@mixin make-sm-column-push($columns) {
  @media (min-width: $screen-sm-min) {
    left: percentage(($columns / $grid-columns));
  }
}
@mixin make-sm-column-pull($columns) {
  @media (min-width: $screen-sm-min) {
    right: percentage(($columns / $grid-columns));
  }
}

// Generate the medium columns
@mixin make-md-column($columns) {
  
  @media (min-width: $screen-md-min) {
    float: left;
    width: percentage(($columns / $grid-columns));
  }
}
@mixin make-md-column-offset($columns) {
  @media (min-width: $screen-md-min) {
    margin-left: percentage(($columns / $grid-columns));
  }
}
@mixin make-md-column-push($columns) {
  @media (min-width: $screen-md-min) {
    left: percentage(($columns / $grid-columns));
  }
}
@mixin make-md-column-pull($columns) {
  @media (min-width: $screen-md-min) {
    right: percentage(($columns / $grid-columns));
  }
}

// Generate the large columns
@mixin make-lg-column($columns) {
  
  @media (min-width: $screen-lg-min) {
    float: left;
    width: percentage(($columns / $grid-columns));
  }
}
@mixin make-lg-column-offset($columns) {
  @media (min-width: $screen-lg-min) {
    margin-left: percentage(($columns / $grid-columns));
  }
}
@mixin make-lg-column-push($columns) {
  @media (min-width: $screen-lg-min) {
    left: percentage(($columns / $grid-columns));
  }
}
@mixin make-lg-column-pull($columns) {
  @media (min-width: $screen-lg-min) {
    right: percentage(($columns / $grid-columns));
  }
}


/*************************************
          responsive media queries
**************************************/

@mixin pc-width {
    @media all and (min-width: $screen-desktop) {
        @content;
    }
}

//code for pad media
@mixin pad-width {
    @media all and (min-width: $screen-tablet) and (max-width: $screen-desktop) {
        @content;
    }
}

//code for small-pad media style
@mixin small-pad-width {
    @media all and (min-width: $screen-phone) and (max-width: $screen-xs-max) {
        @content;
    }
}

//cod for phone media style
@mixin phone-width {
    @media all and (max-width: $screen-phone) {
        @content;
    }
}


/*************************************
                 responsive layout
**************************************/


/*width*/
@mixin responsive-width ($pc, $pad, $small-pad, $phone) {

  @include small-pad-width {
        width: $small-pad;
    }
   @include pad-width {
        width: $pad;
    }
  
    @include pc-width {
        width: $pc;
    }
   
    
    @include phone-width {
        width: $phone;
    }
}


/*height*/
@mixin responsive-height ($pc, $pad, $small-pad, $phone) {
    @include pc-width {
        height: $pc;
    }
    @include pad-width {
        height: $pad;
    }
    @include small-pad-width {
        height: $small-pad;
    }
    @include phone-width {
        height: $phone;
    }
}


/*max-width*/
@mixin responsive-max-width ($pc, $pad, $small-pad, $phone) {
    @include pc-width {
        max-width: $pc;
    }
    @include pad-width {
        max-width: $pad;
    }
    @include small-pad-width {
        max-width: $small-pad;
    }
    @include phone-width {
        max-width: $phone;
    }
}


/*min-width*/
@mixin responsive-min-width ($pc, $pad, $small-pad, $phone) {
    @include pc-width {
        min-width: $pc;
    }
    @include pad-width {
        min-width: $pad;
    }
    @include small-pad-width {
        min-width: $small-pad;
    }
    @include phone-width {
        min-width: $phone;
    }
}


/*max-height*/

@mixin responsive-max-height ($pc, $pad, $small-pad, $phone) {
    @include pc-width {
        max-height: $pc;
    }
    @include pad-width {
        max-height: $pad;
    }
    @include small-pad-width {
        max-height: $small-pad;
    }
    @include phone-width {
        max-height: $phone;
    }
}


/*min-height*/

@mixin responsive-min-height ($pc, $pad, $small-pad, $phone) {
    @include pc-width {
        min-height: $pc;
    }
    @include pad-width {
        min-height: $pad;
    }
    @include small-pad-width {
        min-height: $small-pad;
    }
    @include phone-width {
        min-height: $phone;
    }
}

//responsive padding
@mixin responsive-padding ($pc, $pad, $small-pad, $phone) {
    @include pc-width {
        padding: $pc;
    }
    @include pad-width {
        padding: $pad;
    }
    @include small-pad-width {
        padding: $small-pad;
    }
    @include phone-width {
        padding: $phone;
    }
}

//responsive margin
@mixin responsive-margin ($pc, $pad, $small-pad, $phone) {
    @include pc-width {
        margin: $pc;
    }
    @include pad-width {
        margin: $pad;
    }
    @include small-pad-width {
        margin: $small-pad;
    }
    @include phone-width {
        margin: $phone;
    }
}

//responsive display
@mixin responsive-display($pc, $pad, $small-pad, $phone) {
    @include pc-width {
        display: $pc;
    }
    @include pad-width {
        display: $pad;
    }
    @include small-pad-width {
        display: $small-pad;
    }
    @include phone-width {
        display: $phone;
    }
}

//responsive position
@mixin responsive-position($pc, $pad, $small-pad, $phone) {
    @include pc-width {
        position: $pc;
    }
    @include pad-width {
        position: $pad;
    }
    @include small-pad-width {
        position: $small-pad;
    }
    @include phone-width {
        position: $phone;
    }
}

//responsive position
@mixin responsive-float($pc, $pad, $small-pad, $phone) {
    @include pc-width {
        float: $pc;
    }
    @include pad-width {
        float: $pad;
    }
    @include small-pad-width {
        float: $small-pad;
    }
    @include phone-width {
        float: $phone;
    }
}

//responsive top
@mixin responsive-top($pc, $pad, $small-pad, $phone) {
    @include pc-width {
        top: $pc;
    }
    @include pad-width {
        top: $pad;
    }
    @include small-pad-width {
        top: $small-pad;
    }
    @include phone-width {
        top: $phone;
    }
}

//responsive bottom
@mixin responsive-bottom($pc, $pad, $small-pad, $phone) {
    @include pc-width {
        bottom: $pc;
    }
    @include pad-width {
        bottom: $pad;
    }
    @include small-pad-width {
        bottom: $small-pad;
    }
    @include phone-width {
        bottom: $phone;
    }
}

//responsive left
@mixin responsive-left($pc, $pad, $small-pad, $phone) {
    @include pc-width {
        left: $pc;
    }
    @include pad-width {
        left: $pad;
    }
    @include small-pad-width {
        left: $small-pad;
    }
    @include phone-width {
        left: $phone;
    }
}

//responsive right
@mixin responsive-right($pc, $pad, $small-pad, $phone) {
    @include pc-width {
        right: $pc;
    }
    @include pad-width {
        right: $pad;
    }
    @include small-pad-width {
        right: $small-pad;
    }
    @include phone-width {
        right: $phone;
    }
}

//responsive clear
@mixin responsive-right($pc, $pad, $small-pad, $phone) {
    @include pc-width {
        clear: $pc;
    }
    @include pad-width {
        clear: $pad;
    }
    @include small-pad-width {
        clear: $small-pad;
    }
    @include phone-width {
        clear: $phone;
    }
}


/*************************************
                 responsive font style
**************************************/

//reponsive font color
@mixin responsive-color($pc, $pad, $small-pad, $phone) {
    @include pc-width {
        color: $pc;
    }
    @include pad-width {
        color: $pad;
    }
    @include small-pad-width {
        color: $small-pad;
    }
    @include phone-width {
        color: $phone;
    }
}

//reponsive font size
@mixin responsive-font-size($pc, $pad, $small-pad, $phone) {
    @include pc-width {
        font-size: $pc;
    }
    @include pad-width {
        font-size: $pad;
    }
    @include small-pad-width {
        font-size: $small-pad;
    }
    @include phone-width {
        font-size: $phone;
    }
}

//reponsive text-align
@mixin responsive-text-align($pc, $pad, $small-pad, $phone) {
    @include pc-width {
        text-align: $pc;
    }
    @include pad-width {
        text-align: $pad;
    }
    @include small-pad-width {
        text-align: $small-pad;
    }
    @include phone-width {
        text-align: $phone;
    }
}





